<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itjm.dao.PassengerMapper" >
  <resultMap id="BaseResultMap" type="com.itjm.domain.Passenger" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="phoneNum" property="phoneNum" jdbcType="VARCHAR" />
    <result column="credentialsType" property="credentialsType" jdbcType="INTEGER" />
    <result column="credentialsNum" property="credentialsNum" jdbcType="VARCHAR" />
    <result column="travellerType" property="travellerType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, sex, phoneNum, credentialsType, credentialsNum, travellerType
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_passenger
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_passenger
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.itjm.domain.Passenger" >
    insert into t_passenger (id, name, sex, 
      phoneNum, credentialsType, credentialsNum, 
      travellerType)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, 
      #{phoneNum,jdbcType=VARCHAR}, #{credentialsType,jdbcType=INTEGER}, #{credentialsNum,jdbcType=VARCHAR}, 
      #{travellerType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.itjm.domain.Passenger" >
    insert into t_passenger
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="phoneNum != null" >
        phoneNum,
      </if>
      <if test="credentialsType != null" >
        credentialsType,
      </if>
      <if test="credentialsNum != null" >
        credentialsNum,
      </if>
      <if test="travellerType != null" >
        travellerType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="phoneNum != null" >
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="credentialsType != null" >
        #{credentialsType,jdbcType=INTEGER},
      </if>
      <if test="credentialsNum != null" >
        #{credentialsNum,jdbcType=VARCHAR},
      </if>
      <if test="travellerType != null" >
        #{travellerType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.itjm.domain.Passenger" >
    update t_passenger
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="phoneNum != null" >
        phoneNum = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="credentialsType != null" >
        credentialsType = #{credentialsType,jdbcType=INTEGER},
      </if>
      <if test="credentialsNum != null" >
        credentialsNum = #{credentialsNum,jdbcType=VARCHAR},
      </if>
      <if test="travellerType != null" >
        travellerType = #{travellerType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.itjm.domain.Passenger" >
    update t_passenger
    set name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      phoneNum = #{phoneNum,jdbcType=VARCHAR},
      credentialsType = #{credentialsType,jdbcType=INTEGER},
      credentialsNum = #{credentialsNum,jdbcType=VARCHAR},
      travellerType = #{travellerType,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>