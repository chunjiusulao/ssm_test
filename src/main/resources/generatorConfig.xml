<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE generatorConfiguration PUBLIC
        " -//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <classPathEntry
            location="G:/maven/apache-maven-3.6.0/lib/mysql/mysql-connector-java/5.1.30/mysql-connector-java-5.1.30.jar"/>
    <context id="DB2Tables" targetRuntime="MyBatis3">
        <commentGenerator>
            <property name="suppressDate" value="false"/>
            <property name="suppressAllComments" value="true"/>
        </commentGenerator>
        <!-- mysql数据库连接 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver" connectionURL="jdbc:mysql://127.0.0.1:3306/shopping_mall"
                        userId="root"
                        password="root">
        </jdbcConnection>
        <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL 和  NUMERIC 类型解析为java.math.BigDecimal -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="true"/>
        </javaTypeResolver>
        <!-- targetProject:自动生成代码的位置 -->
        <javaModelGenerator targetPackage="com.itjm.domain"
                            targetProject="G:/repository/ssm_test/src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>
        <!-- 生成mapper.xml配置文件位置 -->
        <sqlMapGenerator targetPackage="com.itjm.mapping"
                         targetProject="G:/repository/ssm_test/src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>
        <!-- 生成mapper接口文件位置 -->
        <javaClientGenerator targetPackage="com.itjm.dao"
                             targetProject="G:/repository/ssm_test/src/main/java"
                             type="XMLMAPPER">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>
        <!-- tableName:用于自动生成代码的数据库表；domainObjectName:对应于数据库表的javaBean类名，当有多个数据摆个要生成时，可以复制下面的代码，同理-->
       <!-- <table tableName="t_product" domainObjectName="Product" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
               <property name="useActualColumnNames" value="true"/></table>-->
        <!--<table tableName="t_user" domainObjectName="UserInfo" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            &lt;!&ndash;设置生成字段的命名规则，true:与数据库字段完全相同,
            flase:在使用role_id这种命名规则时，生成字段按驼峰命名法来规范,在使用roleId这种命名规则时会变成roleid&ndash;&gt;
            <property name="useActualColumnNames" value="true"/>
        </table>-->
        <!--<table tableName="t_role" domainObjectName="Role" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            &lt;!&ndash;设置生成字段的命名规则，true:与数据库字段完全相同,
            flase:在使用role_id这种命名规则时，生成字段按驼峰命名法来规范,在使用roleId这种命名规则时会变成roleid&ndash;&gt;
            <property name="useActualColumnNames" value="true"/>
        </table>-->
        <table tableName="t_log" domainObjectName="Log" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
                      <property name="useActualColumnNames" value="true"/>
        </table>
        <!--
        <table tableName="t_member" domainObjectName="Member" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            &lt;!&ndash;设置生成字段的命名规则，true:与数据库字段完全相同,
            flase:在使用role_id这种命名规则时，生成字段按驼峰命名法来规范,在使用roleId这种命名规则时会变成roleid&ndash;&gt;
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="t_order" domainObjectName="Order" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            &lt;!&ndash;设置生成字段的命名规则，true:与数据库字段完全相同,
            flase:在使用role_id这种命名规则时，生成字段按驼峰命名法来规范,在使用roleId这种命名规则时会变成roleid&ndash;&gt;
            <property name="useActualColumnNames" value="true"/>
        </table>
        <table tableName="t_passenger" domainObjectName="Passenger" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            &lt;!&ndash;设置生成字段的命名规则，true:与数据库字段完全相同,
            flase:在使用role_id这种命名规则时，生成字段按驼峰命名法来规范,在使用roleId这种命名规则时会变成roleid&ndash;&gt;
            <property name="useActualColumnNames" value="true"/>
        </table>&ndash;&gt;
        <table tableName="t_permissions" domainObjectName="Permissions" enableCountByExample="false" enableUpdateByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false" selectByExampleQueryId="false">
            &lt;!&ndash;设置生成字段的命名规则，true:与数据库字段完全相同,
            flase:在使用role_id这种命名规则时，生成字段按驼峰命名法来规范,在使用roleId这种命名规则时会变成roleid&ndash;&gt;
            <property name="useActualColumnNames" value="true"/>
        </table>-->
    </context>
</generatorConfiguration>
