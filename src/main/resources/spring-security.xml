<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd">


    <!--开启jsr250注解-->
    <!--<security:global-method-security jsr250-annotations="enabled"></security:global-method-security>-->
    <!--开启secured注解-->
    <!--<security:global-method-security secured-annotations="enabled"></security:global-method-security>-->
    <!--表达式注解-->

    <!-- 配置不拦截的资源（静态资源及登录相关）-->
    <security:http pattern="/index.jsp" security="none"/>
    <security:http pattern="/pages/failer.jsp" security="none"/>
    <security:http pattern="/static/assets_admin/*/**" security="none"/>
    <security:http pattern="/static/assets_admin/**" security="none"/>
    <security:http pattern="/static/assets_admin/*/*/**" security="none"/>
    <security:http pattern="/WEB-INF/pages/register.jsp" security="none"/>
    <security:http pattern="/admin/register" security="none"/>
    <!-- 不拦截的Action，比如注册 -->
    <security:http pattern="/user/register" security="none"/>


    <!--
        配置具体的规则
        auto-config="true"    不用自己编写登录的页面，框架提供默认登录页面
        use-expressions="false"    是否使用SPEL表达式（没学习过）
    -->
    <security:http  use-expressions="true">
        <!-- 配置具体的拦截的规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER、Role_ADMIN的角色" -->
        <!--<security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>-->
        <security:intercept-url pattern="/WEB-INF/pages/register.jsp" access="hasAnyRole('IS_AUTHENTICATED_ANONYMOUSLY')"/>
        <security:intercept-url pattern="/user/register" access="hasAnyRole('IS_AUTHENTICATED_ANONYMOUSLY')"/>
        <security:intercept-url pattern="/admin/register" access="hasAnyRole('IS_AUTHENTICATED_ANONYMOUSLY')"/>
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>
        <!-- 解决iframe无法引入页面问题 。若为ALLOW-FROM模式，必须配置strategy属性和value属性。否则项目启动报错。value属性应该就是需要被外部iframe引用的页面。-->
        <!-- <security:headers>
                <security:frame-options policy="ALLOW-FROM" strategy="static" value="/chart.html**"/>
            </security:headers>-->

        <!--解决frame无法引入界面问题-->
        <security:headers>
            <security:frame-options disabled="true"/>
        </security:headers>
        <!-- <security:headers>
        <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
         -->




        <!-- 定义跳转的具体的页面 -->
        <!--login-page  自定义登陆页面-->
        <!--login-processing-url  登录请求拦截的url,也就是form表单提交时指定的action-->
        <!--default-target-url  默认登录成功后跳转的页面-->
        <!--authentication-failure-url  用户权限校验失败之后才会跳转到这个页面-->
        <!--authentication-success-forward-url 用户权限校验成功之后会跳转的页面-->
        <security:form-login
                login-page="/index.jsp"
                login-processing-url="/user/login"
                username-parameter="userName"
                    default-target-url="/admin/register"
                authentication-failure-url="/admin/failer"
                authentication-success-forward-url="/admin/index"
        />


        <!-- 关闭跨域请求 -->
        <security:csrf disabled="true"/>
        <!-- 退出，只要路径中有/logout.do，就可以直接点击退出 -->
        <security:logout invalidate-session="true" logout-url="/admin/logout" logout-success-url="/index.jsp"/>

    </security:http>

    <bean id="userService" class="com.itjm.service.impl.UserServiceImpl"></bean>

    <!--切换成数据库中的用户名和密码-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userService">  <!--调用指定的service-->
            <!-- 配置加密的方式-->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <!--<security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="user" password="{noop}user" authorities="ROLE_USER"></security:user>
                <security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN"></security:user>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>-->

    <!-- 配置加密类 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans>